// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop_Site.Data;

#nullable disable

namespace Shop_Site.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shop_Site.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 18, 57, 46, 158, DateTimeKind.Local).AddTicks(4685),
                            Name = "SUPREME"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 7, 18, 18, 57, 46, 158, DateTimeKind.Local).AddTicks(4693),
                            Name = "OFF-WHITE"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 7, 18, 18, 57, 46, 158, DateTimeKind.Local).AddTicks(4693),
                            Name = "STUSSY"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 7, 18, 18, 57, 46, 158, DateTimeKind.Local).AddTicks(4694),
                            Name = "VETEMENTS"
                        });
                });

            modelBuilder.Entity("Shop_Site.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 18, 57, 46, 158, DateTimeKind.Local).AddTicks(4759),
                            Name = "Bloomers"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 7, 18, 18, 57, 46, 158, DateTimeKind.Local).AddTicks(4760),
                            Name = "Blouse"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 7, 18, 18, 57, 46, 158, DateTimeKind.Local).AddTicks(4760),
                            Name = "Bodysuit"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 7, 18, 18, 57, 46, 158, DateTimeKind.Local).AddTicks(4761),
                            Name = "Coat"
                        });
                });

            modelBuilder.Entity("Shop_Site.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Shop_Site.Models.Products", b =>
                {
                    b.HasOne("Shop_Site.Models.Brand", "brand")
                        .WithMany("Product")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Site.Models.Category", "category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("brand");

                    b.Navigation("category");
                });

            modelBuilder.Entity("Shop_Site.Models.Brand", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shop_Site.Models.Category", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
